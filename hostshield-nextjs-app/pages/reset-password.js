import React, {useState} from 'react';
import Head from "next/head";
import Link from "next/link";
import styled from "styled-components";
//Icons
import { MdKeyboardArrowLeft } from "react-icons/md";
//Logo
import Logo from "../src/components/header/logo";
//Backgrounds
import TransparentShieldBg from "../src/components/background/transparent-hostshield-bg";
//Animations
import { motion } from "framer-motion";
import { pageAnimation } from "../src/components/animation/index";
import { PUBLIC_API_KEY } from "../utils";
import { useRouter, useHistory } from "next/router";

export default function ResetPassword() {
  const [isLoading, setIsLoading] = useState(false);
  const router = useRouter();
  const handleOnSubmit = (event) => {
    event.preventDefault();
    if (router?.query?.token && router?.query?.email) {
        const token = router?.query?.token;
        const email = router?.query?.email;
        const {target} = event;
        const password = target['0'].name === 'password' ? target['0'].value: '';
        const confirmPassword = target['1'].name === 'confirm-password' ? target['1'].value: '';

        if (password && confirmPassword && password === confirmPassword) {
            // send data to BE
            const url = `${PUBLIC_API_KEY}/reset-password?token=${token}&email=${email}`;
            setIsLoading(true);
            fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({password})
            }).then(response => {
            setIsLoading(false);
            router.push("/");
            }).catch(error => {
            console.error(error);
            setIsLoading(false);
            });
        }
    }
  }

  return (
    <div className="min-h-screen">
      <Head>
        <title>Reset Password | HostShield</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <motion.section
        className=""
        exit="exit"
        variants={pageAnimation}
        initial="hidden"
        animate="show"
      >
        <div className="flex flex-col lg:flex-row md:min-h-screen bg-section-gradient">
          <div className="min-h-screen order-2 md:order-1 lg:w-2/5 bg-white p-5 flex flex-col justify-between lg:rounded-r-4xl">
            <div>
              <MdKeyboardArrowLeft className="inline-block text-lg" />
              <Link href="/">
                <a className="text-sm font-semibold text-site-dark">
                  Back To Home
                </a>
              </Link>
            </div>
            <div className="flex flex-col justify-evenly mt-12 md:mt-auto">
              <div>
                <h1 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-center text-site-dark">
                  Enter your new password
                </h1>

              </div>
              <form
                className="space-y-6 lg:mt-6 mx-auto w-full md:w-8/12 lg:w-10/12 2xl:w-7/12"
                name="forgot-password-frm"
                onSubmit={handleOnSubmit}
              >
                <div className="mt-5">
                  <div className="flex space-y-2 flex-col justify-center">
                    <label
                      className="text-gray-500 text-base"
                      htmlFor="password"
                    >
                      Password
                    </label>
                    <input
                      type="password"
                      id="password"
                      placeholder=""
                      name="password"
                      required
                      className="bg-gray-100 border-gray-200 focus:border-gray-300 focus:ring-0 text-site-dark py-2 px-5 rounded-sm"
                    />
                  </div>
                </div>
                <div className="mt-5">
                  <div className="flex space-y-2 flex-col justify-center">
                    <label
                      className="text-gray-500 text-base"
                      htmlFor="confirm-password"
                    >
                      Confirm password
                    </label>
                    <input
                      type="password"
                      id="confirm-password"
                      placeholder=""
                      name="confirm-password"
                      required
                      className="bg-gray-100 border-gray-200 focus:border-gray-300 focus:ring-0 text-site-dark py-2 px-5 rounded-sm"
                    />
                  </div>
                </div>
                <div className="">
                {isLoading
                      ? (
                        <div className="w-full flex justify-center py-4 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-site-main focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 uppercase tracking-widest">
                        <StyledLoadingSpinner><div></div><div></div><div></div><div></div></StyledLoadingSpinner>
                        </div>
                      )
                      : (
                        <button
                          type="submit"
                          className="savesign-button group relative w-full flex justify-center py-4 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-site-main focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 uppercase tracking-widest"
                        >
                          Reset Password
                        </button>
                      )}
                </div>
              </form>
            </div>

            <div className="mt-12 md:mt-auto">
              <p className="text-center text-site-gray font-light text-opacity-60">
                {new Date().getFullYear()} &#169; HostShield
              </p>
            </div>
          </div>
          <div className="hidden lg:order-2 lg:w-3/5 bg-section-gradient lg:flex flex-col justify-center relative overflow-hidden  text-white p-5">
            <StyledLoginTransparentShieldBg className="inline-block w-screen h-screen absolute top-0 opacity-20" />
            <Logo className="w-full h-32 mx-auto z-10" />
            <p className="text-center md:text-4xl font-medium mt-12 z-10">
              Your waiver, only smarter
            </p>
            {/*<p className="mt-6 opacity-75 text-center text-sm md:text-base font-light px-0 md:px-20 z-10">
              Convert your waiver into a digital smart waiver{" "}
              <br className="hidden md:block" /> and get more than just a
              signature.
            </p>*/}
          </div>
        </div>
      </motion.section>
    </div>
  );
}

const StyledLoadingSpinner = styled.div`
  display: inline-block;
  position: relative;
  height: 20px;
  width: 76px;

  div {
    position: absolute;
    top: 3.5px;
    width: 13px;
    height: 13px;
    border-radius: 50%;
    background: #fff;
    animation-timing-function: cubic-bezier(0, 1, 1, 0);
  }
  div:nth-child(1) {
    left: 8px;
    animation: lds-ellipsis1 0.6s infinite;
  }
  div:nth-child(2) {
    left: 8px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  div:nth-child(3) {
    left: 32px;
    animation: lds-ellipsis2 0.6s infinite;
  }
  div:nth-child(4) {
    left: 56px;
    animation: lds-ellipsis3 0.6s infinite;
  }
  @keyframes lds-ellipsis1 {
    0% {
      transform: scale(0);
    }
    100% {
      transform: scale(1);
    }
  }
  @keyframes lds-ellipsis3 {
    0% {
      transform: scale(1);
    }
    100% {
      transform: scale(0);
    }
  }
  @keyframes lds-ellipsis2 {
    0% {
      transform: translate(0, 0);
    }
    100% {
      transform: translate(24px, 0);
    }
  }
`;

const StyledLoginTransparentShieldBg = styled(TransparentShieldBg)`
  left: -60%;
  @media (min-width: 1200px) {
    left: -80%;
  }
  @media (min-width: 1440px) {
    left: -84%;
  }
`;
