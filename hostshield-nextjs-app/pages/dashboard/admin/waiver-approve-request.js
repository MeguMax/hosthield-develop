import React, {useState, useEffect, Fragment} from "react";
//Components
import Head from "next/head";
import { useRouter } from "next/router";
import DashboardLayout from "../../../src/components/layout/AdminDashboardLayout";
import DropzoneWithoutDrag from "../../../src/components/file-upload";
//Icons
import { RiMapPinLine, RiAttachmentLine } from "react-icons/ri";
//Animation
import { motion } from "framer-motion";
//styles
import styled from "styled-components";
import { PUBLIC_API_KEY } from './../../../utils';

export default function WaiverApproveRequest() {
  const router = useRouter();
  const [requestData, setRequestData] = useState({
    appliancesList: "",
    balcony: "",
    bunkBeds: "",
    depthMarkers: "",
    doorBellOrSecurity: "",
    issuesWithGuests: "",
    handRailings: "",
    hotTub: "",
    listingLink: "",
    permitPets: "",
    pool: "",
    repairOrRenovation: "",
    propertyCondition: "",
    propertyLocation: "",
    propertyType: "",
    smokeDetectors: "",
    stairs: "",
    stairsLighting: "",
    listingLink: "",
    waiverName: "",
    id: "",
    status: {
        status: ''
    },
    state: "",
    owner: "",
    manager: "",
    user: {
      llcName: '',
      properties: '',
      propertiesOwned: '',
      propertyAccess: []
    }
  });

  // Attached docs
  const [attachedDocs, setAttachedDocs] = useState([]);
  const [lawyerUsername, setLawyerUsername] = useState('');

  const handleAttachedDocsChanged = (docs) => {
    if (Array.isArray(docs)) {
      const docsToAttach = docs.map(doc => doc.file);
      setAttachedDocs(docsToAttach);
    }
  }

  const handleOnSubmit = () => {
    // send data to BE
    const url = `${PUBLIC_API_KEY}/lawyer/approve`;
    let formData = new FormData();
    formData.append("attachedDocument", attachedDocs[0]);
    formData.append('data', JSON.stringify({
        user: lawyerUsername,
        id: requestData.id // mandatory for the BE
    }));

    fetch(url, {
      method: 'POST',
      credentials: 'include',
      body: formData,
    }).then(response => {
        // redirect to success page
        router.push("/dashboard/admin/success");
    }).catch(error => console.error(error));
  }

  useEffect(() => {
    // check if user is logged in: if not, redirect to login page
    const userItem = JSON.parse(localStorage.getItem('user'));
      if (!userItem || !userItem.ttl || userItem.ttl < new Date().getTime()) {
        return router.push('/');
    }

    if (router.query.username) {
        setLawyerUsername(router.query.username);
    }
    if (router.query.id) {
      // get requests
      const url = `${PUBLIC_API_KEY}/request?id=${router.query.id}`;
      fetch(url, {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json'
        },
      }).then(response => {
        response.json().then(data => {
          // handle response
          setRequestData(data);
        });
      }).catch(error => console.error(error));
    }
  }, [router]);



  return (
    <DashboardLayout>
      <Head>
        <title>Request | HostShield</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <StyledRequestWaiver className="flex flex-col px-3 md:ml-12 mt-10 mb-20 space-y-9 w-full md:w-11/12 text-site-dark">
        <div className="flex flex-col space-y-2">
          <h3 className="text-4xl font-semibold">{requestData.waiverName}</h3>
          <div className="flex items-center space-x-1">
            <RiMapPinLine className="text-xl text-site-dark text-opacity-75" />
            <span className=" font-light text-site-dark text-opacity-75">
              {requestData.propertyLocation}
            </span>
          </div>
        </div>
        <hr className="border-site-darkgray border-opacity-30" />
        <div className="flex flex-col space-y-9">
          <StyledGridLayout className="grid bg-white rounded-md shadow-lg px-5 md:px-16 py-7">
            <div className="flex flex-col space-y-4">
            <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Number of owned properties
                </label>
                <span className="text-site-dark font-semibold">{requestData.user.properties}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Who can access the property
                </label>
                <span className="text-site-dark font-semibold">{requestData.user.propertyAccess.toString()}</span>
              </div>
            </div>
            <div className="flex flex-col mt-3 md:mt-auto space-y-4">
            <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Properties owned by LLC?
                </label>
                <span className="text-site-dark font-semibold">{requestData.user.propertiesOwned ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  LLC name
                </label>
                <span className="text-site-dark font-semibold">{requestData.user.llcName ? requestData.user.llcName : "Personal"}</span>
              </div>
            </div>
          </StyledGridLayout>
        </div>
        <div className="flex flex-col space-y-9">
          <StyledGridLayout className="grid bg-white rounded-md shadow-lg px-5 md:px-16 py-7">
            <div className="flex flex-col space-y-4">
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Link to a listing
                </label>
                <a
                  className="text-site-main font-semibold"
                  target="_blank"
                  rel="noreferrer"
                  href={requestData.listingLink}
                >
                  {requestData.listingLink}
                </a>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Type of property
                </label>
                <span className="text-site-dark font-semibold">{requestData.propertyType}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Property State
                </label>
                <span className="text-site-dark font-semibold">{requestData.state}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Full name of property owner
                </label>
                <span className="text-site-dark font-semibold">{requestData.owner}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Full name of property manager
                </label>
                <span className="text-site-dark font-semibold">{requestData.manager}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing have bunk beds?
                </label>
                <span className="text-site-dark font-semibold">{requestData.bunkBeds ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing have stairs?
                </label>
                <span className="text-site-dark font-semibold">{requestData.stairs ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing permit pets?
                </label>
                <span className="text-site-dark font-semibold">{requestData.permitPets ? "Yes" : "No"}</span>
              </div>
              {/* <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Appliances list
                </label>
                <ul className="text-site-dark font-semibold">
                  <li>Microwave</li>
                  <li>Oven</li>
                </ul>
              </div> */}
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Appliances list
                </label>
                <span className="text-site-dark font-semibold">{requestData.appliancesList}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Have you had any issues with guests at your property?
                </label>
                <span className="text-site-dark font-semibold">{requestData.issuesWithGuests ? "Yes" : "No"}</span>
              </div>
            </div>
            <div className="flex flex-col mt-3 md:mt-auto space-y-4">
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing have a hot tub?
                </label>
                <span className="text-site-dark font-semibold">{requestData.hotTub ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing have a balcony?
                </label>
                <span className="text-site-dark font-semibold">{requestData.balcony ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Number of smoke detectors
                </label>
                <span className="text-site-dark font-semibold">{requestData.smokeDetectors}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Do stairs have handrailing’s?
                </label>
                <span className="text-site-dark font-semibold">{requestData.handRailings ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Stairs have lighting?
                </label>
                <span className="text-site-dark font-semibold">{requestData.stairsLighting ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does your listing have a pool?
                </label>
                <span className="text-site-dark font-semibold">{requestData.pool ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Any areas or parts on your property in need of repair or renovation?
                </label>
                <span className="text-site-dark font-semibold">{requestData.repairOrRenovation ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Do you have depth markers?
                </label>
                <span className="text-site-dark font-semibold">{requestData.depthMarkers ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Does listing have ring doorbell or security system?
                </label>
                <span className="text-site-dark font-semibold">{requestData.doorBellOrSecurity ? "Yes" : "No"}</span>
              </div>
              <div className="flex flex-col space-y-1">
                <label className="text-sm text-site-dark text-opacity-60">
                  Potentially dangerous or hazardous condition on the property list
                </label>
                <span className="text-site-dark font-semibold">{requestData.propertyCondition}</span>
              </div>
            </div>
          </StyledGridLayout>
          {requestData.status.status !== 'approved' && (
            <Fragment>
                <div className="flex justify-center w-full sm:w-8/12 lg:w-5/12 mx-auto">
                    <DropzoneWithoutDrag
                    className="flex justify-center items-center space-x-1 bg-input-gray border-gray-100 py-7 px-5 rounded-md cursor-pointer"
                    IconClasses="text-gray-400 text-xl cursor-pointer"
                    LabelText="Attach waiver (.docx)"
                    LabelTextClasses="text-site-dark text-opacity-50 font-normal"
                    Icon={<RiAttachmentLine className="text-gray-400 text-xl" />}
                    limit={1}
                    accept=".docx"
                    onChange={handleAttachedDocsChanged}
                    />
                </div>
                <div className="flex justify-center items-center w-full sm:w-8/12 lg:w-5/12 mx-auto">
                    <button
                    type="button"
                    className="savesign-button group relative w-full py-4 px-4 border border-transparent bg-site-main text-sm font-medium rounded-md text-white focus:outline-none uppercase tracking-widest"
                    onClick={handleOnSubmit}
                    >
                    approve request
                    </button>
                </div>
            </Fragment>
          )}
        </div>
      </StyledRequestWaiver>
    </DashboardLayout>
  );
}

const StyledRequestWaiver = styled(motion.section)`
  height: minmax(70vh, 90vh);
  @media (min-width: 1536px) {
    margin-bottom: 10rem;
  }
`;
const StyledGridLayout = styled.div`
  grid-template-columns: minmax(280px, 0.5fr) minmax(280px, 1fr);
  @media screen and (max-width: 639px) {
    grid-template-columns: minmax(280px, 1fr);
  }
`;
