import React, { Fragment, useEffect, useState } from "react";
//Components
import Head from "next/head";
import Link from "next/link";
import { useRouter } from 'next/router';
//Animation
import { motion } from "framer-motion";
//styles
import styled from "styled-components";
import { pageAnimation } from "../../../src/components/animation/index";
import DashboardLayout from "../../../src/components/layout/DashboardLayout";
// React-PDF
import { Document, Page, pdfjs } from "react-pdf";
import { PUBLIC_API_KEY } from '../../../utils';
pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;

export default function ViewContract() {
    const [numPages, setNumPages] = useState(null);
    const [pageNumber, setPageNumber] = useState(1);
    const router = useRouter();
  
    const [blobPDF, setBlobPDF] = useState(null);
  
    function onDocumentLoadSuccess({ numPages }) {
      setNumPages(numPages);
    }
  
    const goToPrevPage = () => {
      if (pageNumber > 1) {
        setPageNumber(pageNumber - 1);
      }
    }
  
    const goToNextPage = () => {
      if (pageNumber < numPages) {
        setPageNumber(pageNumber + 1);
      }
    }
  
    useEffect(() => {
      if (router?.query?.id && router?.query?.email) {
        fetch(`${PUBLIC_API_KEY}/view-contract?id=${router.query.id}&email=${router.query.email}`, {
          method: 'GET',
            credentials: 'include'
        }).then(response => {
          // response.arrayBuffer().then(data => {
          //   console.log(data);
          // });
          response.blob().then(data => {
            setBlobPDF(data);
            data.text().then(text => {
              console.log(text);
            })
          });
          // response.text().then(text => {
          //   console.log(text);
          // });
        })
      }
    }, [router]);
  
    return (
        <DashboardLayout>
<div className="min-h-screen">
        <Head>
          <title>View Contract | HostShield</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
  
        <motion.div
          className="bg-site-body min-h-screen"
          exit="exit"
          variants={pageAnimation}
          initial="hidden"
          animate="show"
        >
          <div className="w-full ">
            <div className="flex flex-col mt-10 w-10/12 2xl:w-6/12 mx-auto ">
              <h3 className="text-site-dark text-4xl font-semibold mb-2">
                  {/* TODO: add waiver name/email/username */}
                {router?.query?.property || ''}
              </h3>
              <p className="text-site-main text-xl mb-8">{router?.query?.email || ''}</p>
              <StyledContainer className="">
                <StyledContent className="relative flex flex-col bg-white px-6 py-3 space-y-4">
                  {blobPDF && (
                    <StyledCanvasParent>
                      <Document
                        file={blobPDF}
                        onLoadSuccess={onDocumentLoadSuccess}
                      >
                        <Page pageNumber={pageNumber} />
                      </Document>
                    </StyledCanvasParent>
                  )}
                </StyledContent>
                <div className="flex justify-center items-center py-3">
                  <div onClick={goToPrevPage} className="mr-8 cursor-pointer">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-chevron-left" viewBox="0 0 16 16">
                    <path fillRule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/>
                  </svg>
                  </div>
                  <p>Page {pageNumber} of {numPages}</p>
                  <div onClick={goToNextPage} className="ml-8 cursor-pointer">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" className="bi bi-chevron-right" viewBox="0 0 16 16">
                    <path fillRule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
                  </svg>
                  </div>
                </div>
              </StyledContainer>
            </div>
          </div>
        </motion.div>
      </div>
        </DashboardLayout>
    );
  }
  
  const Fader = styled.div`
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    text-align: center;
    margin: 0;
    padding: 30px 0;
    background-image: linear-gradient(to bottom, transparent, white);
  `;
  const StyledContainer = styled.div`
    .fade-in-section {
      opacity: 0;
      visibility: hidden;
      transition: opacity 2s ease;
      will-change: opacity;
    }
    .fade-in-section.is-visible {
      opacity: 1;
      transform: none;
      visibility: visible;
    }
  `;
  
  const StyledCanvasParent = styled.div`
    user-select: none;
    > div > div > canvas {
      margin: 0 auto;
    }
  `;
  
  const StyledContent = styled(motion.div)`
    box-shadow: 10px 0 90px 0 rgba(0, 0, 0, 0.05);
    max-height: calc(100vh - 350px);
    overflow-y: scroll;
    & > div {
      h4 {
        font-weight: 500;
      }
      p {
        font-weight: 300;
        color: #8a8a8a;
      }
    }
  `;
  